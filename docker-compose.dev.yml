version: "3.9"
# docker network create proxy
services:
  db:
    container_name: ${CONTAINER_DB_NAME}
    image: ${DB_IMAGE:-mariadb}:${DB_VERSION:-latest}
    restart: unless-stopped
    volumes:
      - db_data:/var/lib/mysql    
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}

  phpmyadmin:
    depends_on:
      - db
    container_name: phpmyadmin-container
    image: phpmyadmin/phpmyadmin:latest
    restart: always
    environment:
      PMA_HOST: ${PMA_HOST}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.http.routers.phpmyadmin.rule=Host(`phpmyadmin.localhost`)"        


  wordpress:
    depends_on:
      - db
    container_name: ${CONTAINER_SITE_NAME}
    image: wordpress:latest
    restart: unless-stopped
    volumes:
      - wordpress_data:/var/www/html
      - ./conf.d/php.ini:/usr/local/etc/php/conf.d/php.ini
    expose:  # new
      - 80    
    environment:
      WORDPRESS_DB_HOST: ${PMA_HOST}:3306
      WORDPRESS_DB_NAME: ${MYSQL_DATABASE}
      WORDPRESS_DB_USER: ${MYSQL_USER}
      WORDPRESS_DB_PASSWORD: ${MYSQL_PASSWORD}
      WORDPRESS_TABLE_PREFIX: ${WORDPRESS_TABLE_PREFIX}
      VIRTUAL_HOST: ${DOMAINS}
      LETSENCRYPT_HOST: ${DOMAINS}
      LETSENCRYPT_EMAIL: ${LETSENCRYPT_EMAIL}
    logging:
      options:
        max-size: ${LOGGING_OPTIONS_MAX_SIZE:-200k}
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.http.routers.wordpress.rule=Host(`wordpress.localhost`)"
      # - "traefik.http.routers.wordpress-secure.entrypoints=websecure"
      # - "traefik.http.routers.wordpress-secure.rule=Host(`jrtec.io`)"

  datadog:
    image: datadog/agent
    container_name: datadog-agent
    expose:  # new
      - 8125
      - 8126    
    volumes:
     - /var/run/docker.sock:/var/run/docker.sock
     - /proc/:/host/proc/:ro
     - /sys/fs/cgroup:/host/sys/fs/cgroup:ro
     - /var/lib/docker/containers:/var/lib/docker/containers:ro    
    depends_on:
      - wordpress
    environment:
      - DD_API_KEY=${DD_API_KEY}
      - DD_SITE=datadoghq.com
      - DD_LOGS_ENABLED=true
      - DD_LOGS_CONFIG_DOCKER_CONTAINER_USE_FILE=true # To read log from file instead of the docker socket    

  traefik:
    image: "traefik:latest"
    container_name: "traefik"
    restart: always
    command:
      - "--providers.docker=true"
    ports:
      - "80:80"
      # - 443:443
      - "8080:8080"
    depends_on:
      - db
      - wordpress
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - ./traefik/traefik.yml:/traefik.yml:ro
      - ./traefik/.htpasswd:/.htpasswd
      # - ./traefik/acme.json:/acme.json
      # - ./traefik/configurations:/configurations
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`traefik.localhost`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.middlewares=auth"
      - "traefik.http.middlewares.auth.basicauth.usersfile=/.htpasswd"
      # - "traefik.http.routers.traefik-secure.entrypoints=websecure"
      # - "traefik.http.routers.traefik-secure.rule=Host(`traefik.jrtec.io`)"
      # - "traefik.http.routers.traefik-secure.middlewares=user-auth@file"
      # - "traefik.http.routers.traefik-secure.service=api@internal"

    environment:
      - TR_USER=${TR_USER}
      - TR_CODED_PASS=${TR_CODED_PASS}       

volumes:
  db_data: {}
  wordpress_data: {}